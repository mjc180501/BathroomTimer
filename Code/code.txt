#include <Wire.h>
#include <LiquidCrystal.h>
#include <MPU6050.h>

// rs, e, d4, d5, d6, d7 
LiquidCrystal lcd(11, 12, 5, 6, 7, 8);
MPU6050 accelgyro;

const int LED = 2;
const int threshold = 15000;
int doorState = 0;
const int buttons[] = {3, 4, 9, 10};
unsigned long timer = 0;
unsigned long timerStart = 0;
bool timerRunning = false;
int free = 0;

/* 
door closed = 0
door open = 1 

1 = 5 min
2 = 15 min 
3 = 30 min
4 = 45 min 
*/

void setup() {
  Wire.begin();
  Serial.begin(9600);
  pinMode(LED, OUTPUT);
  pinMode(buttons[0], INPUT_PULLUP);
  pinMode(buttons[1], INPUT_PULLUP);
  pinMode(buttons[2], INPUT_PULLUP);
  pinMode(buttons[3], INPUT_PULLUP);
  lcd.begin(16, 2);
  lcd.print("Initializing");

  accelgyro.initialize();
  if (accelgyro.testConnection()) {
    lcd.clear();
    lcd.print("MPU6050 Ready");
  } else {
    lcd.clear();
    lcd.print("MPU6050 Fail");
    while (1);
  }

  delay(600);
  lcd.clear();
}

void loop() {
  int16_t ax, ay, az;
  accelgyro.getAcceleration(&ax, &ay, &az);
  long totalAcc = abs(ax) + abs(ay) + abs(az);

  Serial.print("Acceleration: ");
  Serial.print(ax); Serial.print(" ");
  Serial.print(ay); Serial.print(" ");
  Serial.println(az);

  /* 
  door open + free = timer
  door closed + free = timer
  door open + not free = free
  door closed + not free = not free

  movement + free = start timer
  movement + not free = end timer 
  */
  if (totalAcc > threshold) {
    digitalWrite(LED, HIGH);
    if (doorState == 0 && free == 0) {
      doorState = 1;
      Serial.println("Door closed");
      startTimer();
    } else if (doorState == 1 && free == 1) {
      Serial.println("Door open");
      doorState = 0;
      free = 0;
      timerRunning = false;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Timer Stopped");
      delay(1000);
      lcd.clear();
    }
  }

  if (timerRunning && (millis() - timerStart >= timer)) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Time Up");
    flashLED();
  }
}

void startTimer() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Enter Time");
  delay(2000);

  if (digitalRead(3) == LOW) {
    timer = 5UL * 60UL * 1000UL;
  } else if (digitalRead(4) == LOW) {
    timer = 15UL * 60UL * 1000UL;
  } else if (digitalRead(9) == LOW) {
    timer = 30UL * 60UL * 1000UL;
  } else if (digitalRead(10) == LOW) {
    timer = 45UL * 60UL * 1000UL;
  } else {
    Serial.println("No Button Input");
    return;
  }

  timerStart = millis();
  timerRunning = true;
  free = 1;

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Timer Started");
  delay(1000);
  lcd.clear();
}

void flashLED() {
  for (int i = 0; i < 10; i++) {
    digitalWrite(LED, HIGH);
    delay(250);
    digitalWrite(LED, LOW);
    delay(250);
  }
  timerRunning = false;
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Timer Done");
}
